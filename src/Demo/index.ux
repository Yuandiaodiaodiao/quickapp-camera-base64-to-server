<template>
  <!-- template里只能有一个根节点 -->
  <div class="demo-page">
    <text class="title">拍照->读文件->转换b64->发送服务器</text>
    <input class="btn" type="button" value="拍照" onclick="takePhoto" />
    <input class="btn" type="button" value="读取文件" onclick="readFile" />
    <input class="btn" type="button" value="转换base64" onclick="b64File" />
    <input class="btn" type="button" value="发送服务器" onclick="sendServer" />
    <input class="input" type="text" placeholder="serverPath" value="http://192.168.31.39:8888"
      onchange="inputChanged" />
    <input class="input" type="text" placeholder="photoPath" value="internal://cache/photo634114754637472416.jpg"
      onchange="inputChanged" />
  </div>
</template>

<script>
  import fetch from '@system.fetch'
  import media from '@system.media'
  import file from '@system.file'
   import prompt from '@system.prompt'
  import { Base64 } from 'js-base64'
  export default {
    private: {
      title: '示例页面',
      url: undefined,
      imageBuffer: undefined,
      b64image: undefined,
      serverPath: '',
      photoPath: '',
      processTimer:undefined,
    },
    inputChanged(e) {
      this[e.target.attr.placeholder] = e.value
      console.log(e.target.attr.placeholder)
    },
    sendServer() {
      fetch.fetch({
        url: this.serverPath,
        responseType: 'text',
        method: 'POST',
        data: this.b64image,
        success: function (response) {
          console.log(`发送成功 ${response.code}`)
          prompt.showToast({
            message: `发送成功 ${response.code}`
          })
        },
        fail: function (data, code) {
          console.log(`发送失败 ${data}  ${code}`)
        }
      })
    },
    showPocessing(){
      prompt.showToast({
            message: `处理中`
          })
    }
    ,
    b64File() {
      if(!this.imageBuffer){
        prompt.showToast({
            message: `请先加载文件`
          })
          return
      }
      this.showPocessing()
      let str = this.imageBuffer.reduce((a, b) => a + String.fromCharCode(b), "")
      this.b64image = Base64.btoa(str)
      console.log("b64finish")
      prompt.showToast({
            message: `b64finish`
          })
    },

    takePhoto() {
      // 跳转到应用内的某个页面，router用法详见：文档->接口->页面路由
      media.takePhoto({
        success: (data) => {
          console.log(`handling success: ${data.uri}`)
          console.log(JSON.stringify(data))
          this.url = data.uri
        },
        fail: function (data, code) {
          console.log(`handling fail, code = ${code}`)
        }
      })
    },
    readFile() {
      console.log('正在读取')
      file.readArrayBuffer({
        uri: this.url || this.photoPath,
        success: (data) => {
          this.imageBuffer = data.buffer
          console.log('buffer.length: ' + data.buffer.length)
          prompt.showToast({
            message: `读取完成 length=${data.buffer.length}`
          })
        },
        fail: function (data, code) {
          console.log(`handling fail, code = ${code} data= ${data}`)
        }
      })
    }
  }
</script>

<style>
  .demo-page {
    flex-direction: column;
    justify-content: center;
    align-items: center;
  }

  .title {
    font-size: 40px;
    text-align: center;
  }

  .btn {
    width: 550px;
    height: 86px;
    margin-top: 75px;
    border-radius: 43px;
    background-color: #09ba07;
    font-size: 30px;
    color: #ffffff;
  }
</style>